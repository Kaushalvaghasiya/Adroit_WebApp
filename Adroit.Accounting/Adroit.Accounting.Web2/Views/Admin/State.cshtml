@model Adroit.Accounting.Model.ViewModel.StateViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="dv-list side-app">
    <!-- page-header -->
    <div class="row">
        <div class="col-md-12 col-lg-12">
            <div class="page-header">
                <ol class="breadcrumb breadcrumb-arrow">
                    <li><a href="#">Master</a></li>
                    <li><a href="#">Adroit</a></li>
                    <li><a href="#">Location</a></li>
                    <li class="active"><span>State</span></li>
                </ol>
                <div class="ml-auto">
                    <div class="input-group">
                        <a href="#" class="btn-underdevelopment btn btn-secondary text-white mr-2 btn-sm" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="Bookmark this page"><span><i class="fa fa-star"></i></span></a>
                        <a href="#" class="btn-underdevelopment btn btn-primary text-white mr-2 btn-sm" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="lock"><span><i class="fa fa-lock"></i></span></a>
                        <a href="#" class="btn-add-new btn btn-warning text-white btn-sm" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="Add New"><span><i class="fa fa-plus"></i></span></a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End page-header -->
    <!-- row -->
    <div class="row">
        <div class="col-md-12 col-lg-12">
            <div class="card">
                <div class="card-header">
                </div>
                <div class="card-body pt-0">
                    <div class="table-responsive">
                        <table id="tblMain" class="table table-bordered key-buttons text-wrap">
                            <thead>
                                <tr>
                                    <th class="border-bottom-0">STATE</th>
                                    <th class="border-bottom-0">STATE GSTR</th>
                                    <th class="border-bottom-0">STATE EWAY</th>
                                    <th class="border-bottom-0">CODE</th>
                                    <th class="border-bottom-0">COUNTRY</th>
                                    <th class="border-bottom-0" style="width:100px">ACTIVE</th>
                                    <th class="border-bottom-0 text-center" style="width:100px!important;">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- row end -->
</div>
<div class="dv-detail side-app">
    <!-- page-header -->
    <div class="row">
        <div class="col-lg-12 col-xl-12 col-md-12 col-sm-12">
            <div class="page-header">
                <ol class="breadcrumb breadcrumb-arrow">
                    <li><a href="#">Master</a></li>
                    <li><a href="#">Adroit</a></li>
                    <li><a href="#">Location</a></li>
                    <li><a href="#" class="btn-back">State</a></li>
                    <li class="active"><span id="activeTabName"></span></li>
                </ol>
                <div class="ml-auto">
                    <div class="input-group">
                        <a href="#" class="btn-save btn btn-primary text-white mr-2 btn-sm mode-hide" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="Save"><span><i class="fa fa-save"></i></span></a>
                        <a href="#" class="btn-add-new btn btn-warning text-white mr-2 btn-sm" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="New"><span><i class="fa fa-plus"></i></span></a>
                        <a href="#" class="btn-back btn btn-gray text-white btn-sm" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="Cancel" id="btnCancel"><span><i class="fa fa-arrow-left"></i></span></a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End page-header -->
    <!-- row -->
    <div class="row">
        <div class="col-lg-12 col-xl-12 col-md-12 col-sm-12">
            <div class="card">
                <div class="card-header">
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-6 col-md-12">
                            <div class="form-group">
                                <label for="Country">Country</label>
                                <select class="form-control select2-show-search mode-ed" id="CountryId">
                                    <option></option>
                                    <option value="0">Select Country</option>
                                    @{
                                        if (Model.CountryList != null)
                                        {
                                            foreach (var o in Model.CountryList)
                                            {
                                                <option value="@o.Value">@o.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12">
                            <div class="form-group">
                                <label for="Title">State</label>
                                <select class="form-control select2-show-search-add mode-ed" id="Title">
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12">
                            <div class="form-group">
                                <label for="stateGSTR">State GSTR</label>
                                <select class="form-control select2-show-search-add mode-ed" id="TitleGSTR">
                                    <option></option>
                                    @{
                                        if (Model.TitleGSTRList != null)
                                        {
                                            foreach (var o in Model.TitleGSTRList)
                                            {
                                                <option value="@o.Value">@o.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12">
                            <div class="form-group">
                                <label for="Code">Code</label>
                                <select class="form-control select2-show-search-add mode-ed" id="Code">
                                    <option></option>
                                    @{
                                        if (Model.CodeList != null)
                                        {
                                            foreach (var o in Model.CodeList)
                                            {
                                                <option value="@o.Value">@o.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12">
                            <div class="form-group">
                                <label for="stateGSTR">State EWay</label>
                                <select class="form-control select2-show-search-add mode-ed" id="TitleEWay">
                                    <option></option>
                                    @{
                                        if (Model.TitleEWayList != null)
                                        {
                                            foreach (var o in Model.TitleEWayList)
                                            {
                                                <option value="@o.Value">@o.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-6 col-md-12">
                            <div class="form-group">
                                <div><label for="Active">Active</label></div>
                                <label class="custom-switch">
                                    <input id="Active" type="checkbox" name="custom-switch-checkbox" class="custom-switch-input mode-ed">
                                    <span class="custom-switch-indicator"></span>
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer text-right">
                    <a href="#" class="btn-save btn btn-primary mt-1 mode-hide" data-toggle="tooltip" title="" data-placement="top" data-original-title="Save"><i class="fa fa-save"></i>&nbsp;Save</a>
                    <a href="#" class="btn-add-new btn btn-warning mt-1" data-toggle="tooltip" title="" data-placement="top" data-original-title="new"><i class="fa fa-plus"></i>&nbsp;New</a>
                    <a href="#" class="btn-back btn btn-gray mt-1" data-toggle="tooltip" title="" data-placement="top" data-original-title="Cancel"><i class="fa fa-arrow-left"></i>&nbsp;Cancel</a>
                </div>
            </div>
        </div>
    </div>
    <!-- row end -->
    <input type="hidden" id="Id" value="0" />
</div>

@section Scripts
    {

    <script>
        var stateId = null;
        
        $(function (e) {
            $('.dv-list').show();
            $('.dv-detail').hide();

            bindDatatableList();
        });
        $("#CountryId").on('change', function (e) {
            let countryId = $(this).val();
            if (countryId > 0) {
                bindStateList(countryId);
            } else {
                $("#CountryId").focus();
            }
        });
        function addClick() {
            $('.dv-list').slideUp();
            $('.dv-detail').slideDown();
            fromReset();
            setScreenMode(false);

            $("#Title").focus();

            $("#Active").prop('checked', true);
        }

        function viewMode(id) {
            getDetail(id, true);
        }

        function editMode(id) {
            getDetail(id, false);
        }

        function refreshDatatableList() {
            $('#tblMain').DataTable().ajax.reload();
        }

        function bindDatatableList() {
            let columns = [];
            let colDef = [];
            colDef.push({
                "render": function (data, type, row) {
                    return row.title;
                },
                "targets": colDef.length,
            });
            colDef.push({
                "render": function (data, type, row) {
                    return row.titleGSTR;
                },
                "targets": colDef.length,

            });
            colDef.push({
                "render": function (data, type, row) {
                    return row.titleEWay;
                },
                "targets": colDef.length,

            });
            colDef.push({
                "render": function (data, type, row) {
                    return row.code;
                },
                "targets": colDef.length,

            });
            colDef.push({
                "render": function (data, type, row) {
                    return row.countryName;
                },
                "targets": colDef.length,

            });

            colDef.push({
                "render": function (data, type, row) {
                    return row.active ? "Yes" : "No";
                },
                "targets": colDef.length,
                "className": "text-center"
            });
            colDef.push({
                "render": function (data, type, row) {
                    let btnAct = "<div class='btn-list'> ";
                    btnAct += "<a href='#' class='btn-edit btn btn-outline-warning small-icon-btn' data-value='" + row.id + "' data-toggle='tooltip' title='' data-placement='bottom' data-original-title='Edit'><i class='fa fa-pencil'></i></a>&nbsp;&nbsp;";
                    btnAct += "<a href='#' class='btn-view btn btn-outline-info small-icon-btn' data-value='" + row.id + "' data-toggle='tooltip' title='' data-placement='bottom' data-original-title='View'><i class='fa fa-info'></i></a>&nbsp;&nbsp;";
                    btnAct += "</div>";
                    return btnAct;
                },
                "targets": colDef.length,
                "className": "text-center",
                "orderable": false
            });

            columns.push({ "data": "title", "name": "title" });
            columns.push({ "data": "titleGSTR", "name": "titleGSTR" });
            columns.push({ "data": "titleEWay", "name": "titleEWay" });
            columns.push({ "data": "code", "name": "code" });
            columns.push({ "data": "countryName", "name": "countryName" });
            columns.push({ "data": "active", "name": "active" });
            columns.push({ "data": "Id", "name": "Id" });

            var table = $('#tblMain').DataTable({
                "bAutoWidth": false,
                lengthChange: false,
                ordering: true,
                searching: true,
                paging: true,
                pageLength: 20,
                order: [[0, 'asc']],
                pagingType: 'full_numbers',
                orderClasses: false,
                //scrollCollapse: true,
                //stateSave: false,
                columnDefs: colDef,
                columns: columns,
                language: {
                    paginate: {
                        next: '<i class="fa fa-angle-right"></i>', // or '→'
                        previous: '<i class="fa fa-angle-left"></i>', // or '←'
                        first: '<i class="fa fa-angle-double-left"></i>', // or '→'
                        last: '<i class="fa fa-angle-double-right"></i>' // or '←'
                    }
                },
                buttons: ['copy', 'excel', 'colvis'],
                processing: true,
                serverSide: true,
                ajax: {
                    url: '@(Url.Content("~/admin/StateList"))',
                    type: 'GET',
                    data: function (d) { }
                },
                "initComplete": function (settings, json) {
                    gridInitComplete(table);
                },
                "drawCallback": function (settings) {
                    gridDrawCallback(this);
                }

            });
        }

        function fromReset() {
            $("#Id").val(0);
            $("#CountryId").val(null).trigger('change');
            $("#Title").html("");;
            $("#TitleGSTR").val(null).trigger('change');
            $("#TitleEWay").val(null).trigger('change');
            $("#Code").val(null).trigger('change');
            $("#Active").prop('checked', false);
            $("#activeTabName").text("Add");
            setScreenMode(false);
            stateId = null;
        }

        function saveItem() {
            try {
                if ($("#CountryId").val() == "" || $("#CountryId").val() == null || $("#CountryId").val() == "0") {
                    showWarning("", "Please select country.");
                    $("#Title").focus();
                    return false;
                }

                if ($("#Title").val() == "" || $("#Title").val() == null || $("#Title").val() == "0") {
                    showWarning("", "Please enter valid state name.");
                    $("#Title").focus();
                    return false;
                }

                if ($("#Title").val().length > 100) {
                    showWarning("", "State name must be upto 100 characters long.");
                    $("#Title").focus();
                    return false;
                }

                if ($("#TitleGSTR").val() == "" || $("#TitleGSTR").val() == null) {
                    showWarning("", "Please enter valid State GSTR .");
                    $("#TitleGSTR").focus();
                    return false;
                }

                if ($("#TitleGSTR").val().length > 100) {
                    showWarning("", "state  GSTR  must be upto 100 characters long.");
                    $("#TitleGSTR").focus();
                    return false;
                }

                if ($("#Code").val() == "" || $("#Code").val() == null) {
                    showWarning("", "Please enter valid Code.");
                    $("#Code").focus();
                    return false;
                }

                if ($("#Code").val().length > 5) {
                    showWarning("", "code max 5 characters long.");
                    $("#Code").focus();
                    return false;
                }

                if ($("#TitleEWay").val() == "" || $("#TitleEWay").val() == null) {
                    showWarning("", "Please enter valid TitleEWay.");
                    $("#TitleEWay").focus();
                    return false;
                }

                if ($("#TitleEWay").val().length > 100) {
                    showWarning("", "state  EWay  must be upto 100 characters long.");
                    $("#TitleEWay").focus();
                    return false;
                }

                var savedata = new Object();
                savedata.Id = parseInt($("#Id").val());
                savedata.Title = $("#Title").val();
                savedata.TitleGSTR = $("#TitleGSTR").val();
                savedata.TitleEWay = $("#TitleEWay").val();
                savedata.Code = $("#Code").val();
                savedata.CountryId = $("#CountryId").val();
                savedata.Active = $("#Active").prop('checked');

                blockUI('container');

                $.ajax({
                    type: "POST",
                    url: "@(Url.Action("SaveState", "Admin"))",
                    data: JSON.stringify(savedata),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    async: true,
                    success: function (data) {
                        unblockUI('container');
                        if (data.result == RESULT_SUCCESS) {
                            fromReset();
                            showWarning("", 'State saved successfully.');
                            $("#Id").val(0);
                            refreshDatatableList();
                            $('.btn-back').click();
                        } else {
                            showError("", data.data);
                        }
                    },
                    error: function (error) {
                        unblockUI('container');
                        showError("", error.statusText);
                    }
                });

            }
            catch (e) {
                unblockUI('container');
                showError("", e.message);
            }

        }

        function getDetail(id, isViewMode) {
            try {
                blockUI('container');
                var retrundata = AjaxCall("Get", "@(Url.Content("~/Admin/GetState"))" + "/" + id, "",
                    function (result) {
                        unblockUI('container');
                        var str = "";
                        try {
                            if (result.result == RESULT_SUCCESS) {
                                addClick();
                                if (isViewMode) {
                                    setScreenMode(true);
                                    $("#activeTabName").text("VIEW ID# " + result.data.id);
                                } else {
                                    setScreenMode(false);
                                    $("#activeTabName").text("EDIT (ID# " + result.data.id + ")");
                                }

                                $('#Id').val(result.data.id);
                                stateId = result.data.title;
                                $("#CountryId").val(result.data.countryId).trigger('change');
                                //$("#Title").val(result.data.title).trigger('change');
                                $("#TitleGSTR").val(result.data.titleGSTR).trigger('change');
                                $("#TitleEWay").val(result.data.titleEWay).trigger('change');
                                $("#Code").val(result.data.code).trigger('change');
                                $("#CountryId").val(result.data.countryId).trigger('change');
                                $("#Active").prop('checked', result.data.active);
                            } else {
                                showError('Error', result.data); //warning,  success, error, info
                            }
                        } catch (e) {
                            unblockUI('container');
                            showError('Error', e); //warning,  success, error, info
                        }
                    },
                    function (error) {

                    });
            }
            catch (err) {
            }
        }
        function bindStateList(countryId) {
            try {
                blockUI('container');
                var retrundata = AjaxCall("GET", "@(Url.Content("~/Common/GetStates"))" + "?countryId=" + countryId, "",
                    function (data) {
                        unblockUI('container');
                        var str = "<option></option>";
                        str += "<option value='0'>Select State</option>";
                        if (data.result == RESULT_SUCCESS) {
                            if (data.data.length > 0) {
                                for (var i = 0; i < data.data.length; i++) {
                                    str += ("<option value='" + data.data[i]['text'] + "'>" + data.data[i]["text"] + "</option>");
                                }
                            }
                            $("#Title").html(str);
                            if (stateId != null) {
                                $("#Title").val(stateId).trigger('change');
                            }
                        } else {
                            showError("", data.data);
                        }

                    },
                    function (error) {
                        unblockUI('container');
                        showError("", error.statusText);
                    });
            }
            catch (err) {
                unblockUI('container');
                showError("", e.message);
            }
        }
    </script>

}
