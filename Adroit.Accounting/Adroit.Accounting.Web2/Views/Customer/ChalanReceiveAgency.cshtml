@model Adroit.Accounting.Model.ViewModel.ChalanReceiveAgencyViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="dv-list side-app">
    <!-- page-header -->
    <div class="row">
        <div class="col-md-12 col-lg-12">
            <div class="page-header">
                <ol class="breadcrumb breadcrumb-arrow">
                    <li><a href="#">Delivery</a></li>
                    <li><a href="#">Chalan Receive</a></li>
                    <li class="active"><span>Agency</span></li>
                </ol>
                <div class="ml-auto">
                    <div class="input-group">
                        <a href="#" class="btn btn-secondary text-white mr-2 btn-sm" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="Bookmark this page">
                            <span>
                                <i class="fa fa-star"></i>
                            </span>
                        </a>
                        <a href="lockscreen.html" class="btn btn-primary text-white mr-2 btn-sm" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="lock">
                            <span>
                                <i class="fa fa-lock"></i>
                            </span>
                        </a>
                        <a href="#" class="btn-add-new btn btn-warning text-white btn-sm" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="Add New">
                            <span>
                                <i class="fa fa-plus"></i>
                            </span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End page-header -->
    <!-- row -->
    <div class="row">
        <div class="col-md-12 col-lg-12">
            <div class="card">
                <div class="card-header">
                </div>
                <div class="card-body pt-0">
                    <div class="table-responsive">
                        <table id="tblMain" class="table table-bordered key-buttons text-nowrap">
                            <thead>
                                <tr>
                                    <th class="border-bottom-0">BRANCH REC#</th>
                                    <th class="border-bottom-0">FIRM REC#</th>
                                    <th class="border-bottom-0">ARRIVAL DATE</th>
                                    <th class="border-bottom-0">VEHICLE#</th>
                                    <th class="border-bottom-0">SENDER NAME</th>
                                    <th class="border-bottom-0">CH. #</th>
                                    <th class="border-bottom-0">CH. DATE</th>
                                    <th class="border-bottom-0">FREIGHT</th>
                                    <th class="border-bottom-0">FROM CITY</th>
                                    <th class="border-bottom-0">TO CITY</th>
                                    <th class="border-bottom-0">NET AMOUNT</th>
                                    <th class="border-bottom-0">BILL PARTY</th>
                                    <th class="border-bottom-0">TO PAY LR</th>
                                    <th class="border-bottom-0">TO PAY LR AMT.</th>
                                    <th class="border-bottom-0">PAID LR</th>
                                    <th class="border-bottom-0">PAID LR AMT.</th>
                                    <th class="border-bottom-0">TBB LR</th>
                                    <th class="border-bottom-0">TBB LR AMT.</th>
                                    <th class="border-bottom-0 text-center" style="width:80px!important;">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- row end -->
</div>
<div class="dv-detail side-app">
    <!-- page-header -->
    <div class="row">
        <div class="col-lg-12 col-xl-12 col-md-12 col-sm-12">
            <div class="page-header">
                <ol class="breadcrumb breadcrumb-arrow">
                    <li><a href="#">Delivery</a></li>
                    <li><a href="#">Chalan Receive</a></li>
                    <li><a href="#">Agency</a></li>
                    <li class="active"><span id="activeTabName">Add</span></li>
                </ol>
                <div class="ml-auto">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Search E-Way Bill...">
                        <span class="input-group-append mr-2">
                            <button class="btn btn-primary" type="button">Go!</button>
                        </span>
                        <a href="#" class="btn btn-primary text-white mr-2 btn-sm" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="Save">
                            <span>
                                <i class="fa fa-save"></i>
                            </span>
                        </a>
                        <a href="#" class="btn btn-blue text-white mr-2 btn-sm" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="Print">
                            <span>
                                <i class="fa fa-print"></i>
                            </span>
                        </a>
                        <a href="#" class="btn btn-success text-white mr-2 btn-sm" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="Send">
                            <span>
                                <i class="fa fa-share-alt"></i>
                            </span>
                        </a>
                        <a href="#" class="btn btn-danger text-white mr-2 btn-sm" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="Delete">
                            <span>
                                <i class="fa fa-trash-o"></i>
                            </span>
                        </a>
                        <a href="#" class="btn-add-new btn btn-warning text-white mr-2 btn-sm" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="New">
                            <span>
                                <i class="fa fa-plus"></i>
                            </span>
                        </a>
                        <a href="#" class="btn-back btn btn-gray text-white btn-sm" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="Cancel">
                            <span>
                                <i class="fa fa-arrow-left"></i>
                            </span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- End page-header -->
    <!-- row -->
    <div class="row">
        <div class="col-lg-12 col-xl-12 col-md-12 col-sm-12">
            <div class="card">
                <div class="card-header">
                    <!--<h3 class="card-title">Add/Edit Product</h3>-->
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-horizontal">
                                <div class="row mb-1">
                                    <label for="SenderBranchAccountMappingid" class="col-md-1 form-label">Sender Name</label>
                                    <div class="col-md-2">
                                        <select class="form-control select2-show-search" id="SenderBranchAccountMappingid" tabindex="1">
                                            <option></option>
                                            @{
                                                if (Model.CustomerFirmBranchList != null)
                                                {
                                                    foreach (var o in Model.CustomerFirmBranchList)
                                                    {
                                                        if (o.Value != ViewBag.CurrentBranchId.ToString())
                                                        {
                                                            <option value="@o.Value">@o.Text</option>
                                                        }
                                                    }
                                                }
                                            }
                                        </select>

                                    </div>
                                    <label for="ArrivalDate" class="col-md-1 form-label mb-1">Arrival Date</label>
                                    <div class="col-md-2">
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <div class="input-group-text">
                                                    <i class="fa fa-calendar tx-16 lh-0 op-6"></i>
                                                </div>
                                            </div>
                                            <input class="form-control fc-datepicker" placeholder="MM/DD/YYYY" type="text" id="ArrivalDate" tabindex="2">
                                        </div>
                                    </div>
                                    <label for="BillNumberBranch" class="col-md-1 form-label">Branch Rec. #</label>
                                    <div class="col-md-2">
                                        <input type="text" class="form-control" id="BillNumberBranch" placeholder="">
                                    </div>
                                    <label for="BillNumberFirm" class="col-md-1 form-label mb-1">Firm Rec. #</label>
                                    <div class="col-md-2">
                                        <input type="text" class="form-control" id="BillNumberFirm" placeholder="">
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <label for="FirmChalanNumber" class="col-md-1 form-label">Firm Chalan#</label>
                                    <div class="col-md-2">
                                        <input type="text" class="form-control" id="FirmChalanNumber" placeholder="" tabindex="3">
                                    </div>
                                    <label for="FirmChalanDate" class="col-md-1 form-label mb-1">Date</label>
                                    <div class="col-md-2">
                                        <div class="input-group">
                                            <div class="input-group-prepend">
                                                <div class="input-group-text">
                                                    <i class="fa fa-calendar tx-16 lh-0 op-6"></i>
                                                </div>
                                            </div>
                                            <input class="form-control fc-datepicker" placeholder="MM/DD/YYYY" type="text" id="FirmChalanDate" tabindex="4">
                                        </div>
                                    </div>
                                    <label for="CityIdFrom" class="col-md-1 form-label">From</label>
                                    <div class="col-md-2">
                                        <select class="form-control select2-show-search-add mode-ed" id="CityIdFrom" tabindex="5">
                                            @{
                                                if (Model.CityList != null)
                                                {
                                                    foreach (var o in Model.CityList)
                                                    {
                                                        <option value="@o.Value">@o.Text</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </div>
                                    <label for="CityIdTo" class="col-md-1 form-label">To</label>
                                    <div class="col-md-2">
                                        <select class="form-control select2-show-search-add mode-ed" id="CityIdTo" tabindex="6">
                                            @{
                                                if (Model.CityList != null)
                                                {
                                                    foreach (var o in Model.CityList)
                                                    {
                                                        <option value="@o.Value">@o.Text</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <label for="VehicleId" class="col-md-1 form-label">Vehicle#</label>
                                    <div class="col-md-2">
                                        <select class="form-control select2-show-search mode-ed" id="VehicleId" tabindex="7">
                                            <option></option>
                                            @{
                                                if (Model.VehicleList != null)
                                                {
                                                    foreach (var o in Model.VehicleList)
                                                    {
                                                        <option value="@o.Value">@o.Text</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </div>
                                    <label for="BillAccountBranchMappingId" class="col-md-1 form-label">Bill Party</label>
                                    <div class="col-md-2">
                                        <select class="form-control select2-show-search mode-ed" id="BillAccountBranchMappingId" tabindex="8">
                                            <option></option>
                                            @{
                                                if (Model.AccountBranchMappingList != null)
                                                {
                                                    foreach (var o in Model.AccountBranchMappingList)
                                                    {
                                                        <option value="@o.Value">@o.Text</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </div>
                                    <label for="DriverId" class="col-md-1 form-label">Driver</label>
                                    <div class="col-md-2">
                                        <select class="form-control select2-show-search mode-ed" id="DriverId" tabindex="9">
                                            <option></option>
                                            @{
                                                if (Model.DriverList != null)
                                                {
                                                    foreach (var o in Model.DriverList)
                                                    {
                                                        <option value="@o.Value">@o.Text</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </div>
                                    <label for="EwayBillNo" class="col-md-1 form-label">E-Way Bill Part-B</label>
                                    <div class="col-md-2" style="display:flex;">
                                        <select class="form-control select2-show-search-add mode-ed" id="EwayBillNo" tabindex="10">
                                            <option></option>
                                            @{
                                                if (Model.EwayBillBList != null)
                                                {
                                                    foreach (var o in Model.EwayBillBList)
                                                    {
                                                        <option value="@o.Value">@o.Text</option>
                                                    }
                                                }
                                            }
                                        </select>
                                        <span class="input-group-append">
                                            <a hre="#" class="btn btn-primary text-white" id=""
                                               data-container="body" data-toggle="popover" data-popover-color="default"
                                               data-placement="bottom" title="Popover bottom">
                                                <i class="side-menu__icon typcn typcn-clipboard">
                                                </i>
                                            </a>
                                        </span>
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <label for="GoDownNumber" class="col-md-1 form-label">Godown No</label>
                                    <div class="col-md-2">
                                        <select class="form-control select2-show-search-add mode-ed" id="GoDownNumber" tabindex="11">
                                            <option></option>
                                            @{
                                                if (Model.GoDownNumberList != null)
                                                {
                                                    foreach (var o in Model.GoDownNumberList)
                                                    {
                                                        <option value="@o.Value">@o.Text</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </div>
                                    <label for="IsAutoLR" class="col-md-1">Is Auto LR</label>
                                    <div class="col-md-2">
                                        <label class="custom-switch">
                                            <input id="IsAutoLR" type="checkbox" name="custom-switch-checkbox" class="custom-switch-input mode-ed">
                                            <span class="custom-switch-indicator"></span>
                                        </label>
                                    </div>
                                </div>
                                <div class="col-lg-12 col-xl-12 col-md-12 col-sm-12  p-0">
                                    <div class="card">
                                        <div class="card-body">
                                            <div class="row">
                                                <div class="col-md-12" id="LRTbl">
                                                    <!--content rows-->
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-8">
                            <div class="form-horizontal">
                                <div class="row mb-1">
                                    <div class="col-md-3">
                                        <div class="row m-b p-0">
                                            <label for="ToPayAccountBranchMappingId" class="col-md-3 form-label mb-1">To Pay</label>
                                            <div class="col-md-9">
                                                <select class="form-control select2-show-search" id="ToPayAccountBranchMappingId" tabindex="26">
                                                    <option></option>
                                                    @{
                                                        if (Model.AccountBranchMappingList != null)
                                                        {
                                                            foreach (var o in Model.AccountBranchMappingList)
                                                            {
                                                                <option value="@o.Value">@o.Text</option>
                                                            }
                                                        }
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <input type="text" class="form-control text-right decimalonly" data-tofixed="2" id="ToPayAmount" placeholder="" readonly tabindex="-1">
                                    </div>
                                    <label for="SalesAccountBranchMappingId" class="col-md-2 form-label mb-1">Charged To</label>
                                    <div class="col-md-4">
                                        <select class="form-control select2-show-search" id="SalesAccountBranchMappingId" tabindex="27">
                                            <option></option>
                                            @{
                                                if (Model.AccountBranchMappingList != null)
                                                {
                                                    foreach (var o in Model.AccountBranchMappingList)
                                                    {
                                                        <option value="@o.Value">@o.Text</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <label for="Paid" class="col-md-3 form-label">Paid</label>
                                    <div class="col-md-3">
                                        <input type="text" class="form-control text-right decimalonly" data-tofixed="2" id="Paid" placeholder="" readonly tabindex="-1">
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <label for="TBB" class="col-md-3 form-label">TBB</label>
                                    <div class="col-md-3">
                                        <input type="text" class="form-control text-right decimalonly" data-tofixed="2" id="TBB" placeholder="" readonly tabindex="-1">
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <label for="Total" class="col-md-3 form-label">Total</label>
                                    <div class="col-md-3">
                                        <input type="text" class="form-control text-right decimalonly" data-tofixed="2" id="Total" placeholder="" readonly tabindex="-1">
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <label for="CrossingAmount" class="col-md-3 form-label">@Model.CustomerFirmBranchTransportSetting.CrossingAmountAccountName</label>
                                    <div class="col-md-3">
                                        <input type="text" class="form-control text-right decimalonly" data-tofixed="2" id="CrossingAmount" placeholder="">
                                    </div>
                                    <label for="CrossingAmountAccountBranchMappingId" class="col-md-2 form-label mb-1">Charged To</label>
                                    <div class="col-md-4">
                                        <select class="form-control select2-show-search" id="CrossingAmountAccountBranchMappingId">
                                            <option></option>
                                            @{
                                                if (Model.AccountBranchMappingList != null)
                                                {
                                                    foreach (var o in Model.AccountBranchMappingList)
                                                    {
                                                        <option value="@o.Value">@o.Text</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <label for="CrossingCommission" class="col-md-3 form-label">@Model.CustomerFirmBranchTransportSetting.CrossingCommissionAccountName</label>
                                    <div class="col-md-3">
                                        <input type="text" class="form-control text-right decimalonly" data-tofixed="2" id="CrossingCommission" placeholder="">
                                    </div>
                                    <label for="CrossingCommissionAccountBranchMappingId" class="col-md-2 form-label mb-1">Charged To</label>
                                    <div class="col-md-4">
                                        <select class="form-control select2-show-search" id="CrossingCommissionAccountBranchMappingId">
                                            <option></option>
                                            @{
                                                if (Model.AccountBranchMappingList != null)
                                                {
                                                    foreach (var o in Model.AccountBranchMappingList)
                                                    {
                                                        <option value="@o.Value">@o.Text</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <label for="CrossingHamali" class="col-md-3 form-label">@Model.CustomerFirmBranchTransportSetting.CrossingHamaliAccountName</label>
                                    <div class="col-md-3">
                                        <input type="text" class="form-control text-right decimalonly" data-tofixed="2" id="CrossingHamali" placeholder="">
                                    </div>
                                    <label for="CrossingHamaliAccountBranchMappingId" class="col-md-2 form-label mb-1">Charged To</label>
                                    <div class="col-md-4">
                                        <select class="form-control select2-show-search" id="CrossingHamaliAccountBranchMappingId">
                                            <option></option>
                                            @{
                                                if (Model.AccountBranchMappingList != null)
                                                {
                                                    foreach (var o in Model.AccountBranchMappingList)
                                                    {
                                                        <option value="@o.Value">@o.Text</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <label for="CrossingDeliveryCharge" class="col-md-3 form-label">@Model.CustomerFirmBranchTransportSetting.CrossingDeliveryChargeAccountName</label>
                                    <div class="col-md-3">
                                        <input type="text" class="form-control text-right decimalonly" data-tofixed="2" id="CrossingDeliveryCharge" placeholder="">
                                    </div>
                                    <label for="CrossingDeliveryAccountBranchMappingId" class="col-md-2 form-label mb-1">Charged To</label>
                                    <div class="col-md-4">
                                        <select class="form-control select2-show-search" id="CrossingDeliveryAccountBranchMappingId">
                                            <option></option>
                                            @{
                                                if (Model.AccountBranchMappingList != null)
                                                {
                                                    foreach (var o in Model.AccountBranchMappingList)
                                                    {
                                                        <option value="@o.Value">@o.Text</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <label for="BrokerAmount" class="col-md-3 form-label">Brokerage</label>
                                    <div class="col-md-3">
                                        <input type="text" class="form-control text-right decimalonly" data-tofixed="2" id="BrokerAmount" placeholder="" tabindex="37">
                                    </div>
                                    <label for="BrokerBranchMappingId" class="col-md-2 form-label mb-1">Broker</label>
                                    <div class="col-md-4">
                                        <select class="form-control select2-show-search" id="BrokerBranchMappingId" tabindex="38">
                                            <option></option>
                                            @{
                                                if (Model.BrokerList != null)
                                                {
                                                    foreach (var o in Model.BrokerList)
                                                    {
                                                        <option value="@o.Value">@o.Text</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-horizontal">
                                <div class="row mb-1">
                                    <label for="TaxableAmount" class="col-md-6 form-label text-left">Lorry Hire/ Freight</label>
                                    <div class="col-md-6">
                                        <input type="text" class="form-control text-right decimalonly" data-tofixed="2" id="TaxableAmount" placeholder="" tabindex="28">
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <label for="TDSPercent" class="col-md-6 form-label text-left">Less TDS</label>
                                    <div class="col-md-2">
                                        <input type="text" class="form-control text-right decimalonly" data-tofixed="2" id="TDSPercent" placeholder="%" tabindex="29">
                                    </div>
                                    <div class="col-md-4">
                                        <input type="text" class="form-control text-right decimalonly" data-tofixed="2" id="TDSAmount" placeholder="" tabindex="30">
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <label for="AdvanceCash" class="col-md-6 form-label text-left">Cash To Lorry Trip</label>
                                    <div class="col-md-6">
                                        <input type="text" class="form-control text-right decimalonly" data-tofixed="2" id="AdvanceCash" placeholder="" tabindex="31">
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <label for="AdvanceNeft" class="col-md-6 form-label text-left">Bank Transfer To Lorry Trip</label>
                                    <div class="col-md-6">
                                        <input type="text" class="form-control text-right decimalonly" data-tofixed="2" id="AdvanceNeft" placeholder="" tabindex="32">
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <label for="ReceiveCash" class="col-md-6 form-label text-left">Received Cash By Driver</label>
                                    <div class="col-md-6">
                                        <input type="text" class="form-control text-right decimalonly" data-tofixed="2" id="ReceiveCash" placeholder="" tabindex="33">
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <label for="OtherPlus" class="col-md-6 form-label text-left">Other Exp of Trip</label>
                                    <div class="col-md-6">
                                        <input type="text" class="form-control text-right decimalonly" data-tofixed="2" id="OtherPlus" placeholder="" tabindex="34">
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <label for="OtherLess" class="col-md-6 form-label text-left">Other Less</label>
                                    <div class="col-md-6">
                                        <input type="text" class="form-control text-right decimalonly" data-tofixed="2" id="OtherLess" placeholder="" tabindex="35">
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <label for="NetAmount" class="col-md-6 form-label text-left">NET AMOUNT</label>
                                    <div class="col-md-6">
                                        <input type="text" class="form-control text-right decimalonly" data-tofixed="2" id="NetAmount" placeholder="" readonly tabindex="36">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-horizontal">
                                <div class="row mb-1">
                                    <label for="Notes" class="col-md-2 form-label">Remarks</label>
                                    <div class="col-md-10">
                                        <input type="text" class="form-control" id="Notes" placeholder="" tabindex="39">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer text-right">
                    <a href="#" class="btn btn-primary mt-1" data-toggle="tooltip" title="" data-placement="top" data-original-title="Save" tabindex="40"><i class="fa fa-save"></i>&nbsp;Save</a>
                    <a href="#" class="btn btn-blue mt-1" data-toggle="tooltip" title="" data-placement="top" data-original-title="Print"><i class="fa fa-print"></i>&nbsp;Print</a>
                    <a href="#" class="btn btn-success mt-1" data-toggle="tooltip" title="" data-placement="top" data-original-title="Send"><i class="fa fa-share-alt"></i>&nbsp;Send</a>
                    <a href="#" class="btn btn-danger mt-1" data-toggle="tooltip" title="" data-placement="top" data-original-title="Delete"><i class="fa fa-trash-o"></i>&nbsp;Delete</a>
                    <a href="#" class="btn-back btn btn-warning mt-1" data-toggle="tooltip" title="" data-placement="top" data-original-title="Cancel" tabindex="41"><i class="fa fa-plus"></i>&nbsp;New</a>
                    <a href="#" class="btn-back btn btn-gray mt-1" data-toggle="tooltip" title="" data-placement="top" data-original-title="Cancel"><i class="fa fa-arrow-left"></i>&nbsp;Cancel</a>
                </div>
            </div>
        </div>
    </div>
    <!-- row end -->
    <input type="hidden" id="Id" value="0" />
</div>

@section Scripts
{
    <script>
        var contentRowId = 0;
        var addedIds = 0;
        var selectedLRDetails = [];

        $(function (e) {
            $('.dv-list').show();
            $('.dv-detail').hide();
            bindDatatableList();

            $("#BillAccountBranchMappingId").on('change', function (e) {
                GetTDSPercentByCustomerAccountBranchMappingId($(this).val());
            });

            $("#VehicleId").on('change', function (e) {
                getBillParty();
            });

            $("#ToPayAccountBranchMappingId").on('change', function (e) {

                $("#SalesAccountBranchMappingId").val($(this).val()).trigger('change');
                $("#CrossingAmountAccountBranchMappingId").val($(this).val()).trigger('change');
                $("#CrossingCommissionAccountBranchMappingId").val($(this).val()).trigger('change');
                $("#CrossingHamaliAccountBranchMappingId").val($(this).val()).trigger('change');
                $("#CrossingDeliveryAccountBranchMappingId").val($(this).val()).trigger('change');

            });

            $("#TaxableAmount").on('keyup', function (e) {
                CalcNetAmount();
            });

            $("#TDSAmount").on('keyup', function (e) {
                CalcNetAmount();
            });

            $("#AdvanceCash").on('keyup', function (e) {
                CalcNetAmount();
            });

            $("#AdvanceNeft").on('keyup', function (e) {
                CalcNetAmount();
            });

            $("#ReceiveCash").on('keyup', function (e) {
                CalcNetAmount();
            });

            $("#OtherPlus").on('keyup', function (e) {
                CalcNetAmount();
            });

            $("#OtherLess").on('keyup', function (e) {
                CalcNetAmount();
            });

            $("#TDSPercent").on('keyup', function (e) {
                var amt = ($('#TaxableAmount').val() * $(this).val() / 100) || 0;
                $("#TDSAmount").val(Math.round(amt));
            });

            $("#TaxableAmount, #TDSAmount, #AdvanceCash, #AdvanceNeft, #ReceiveCash, #OtherPlus, #OtherLess").on('change', function (e) {
                var fieldId = $(this).attr('id');
                var currentValue = parseFloat($("#" + fieldId).val());
                var formattedValue = currentValue.toFixed(2);
                $("#" + fieldId).val(formattedValue);
            });

            $("#ToPayAmount, #TBB, #Paid, #Total").on('focusout', function (e) {
                BindTopayTBBPaidAmt();
            });

            addClick(true);

        });

        function addClick(isClickAtPgLoad = false) {
            $('.dv-list').slideUp();
            $('.dv-detail').slideDown();
            fromReset(isClickAtPgLoad);
            setScreenMode(false);
            $(".btn-delete").hide();
            $("#BillNumberBranch").focus();
            $("#BillNumberBranch").val(0);
            $("#BillNumberFirm").val(0);
            $("#FirmChalanNumber").val(0);
            $("#ToAccountBranchMappingId").val(@Model.CustomerFirmBranchTransportSetting.ToPayAccountBranchMappingId).trigger('change');
            $("#SalesAccountBranchMappingId").val(@Model.CustomerFirmBranchTransportSetting.SalesAccountBranchMappingId).trigger('change');
            $("#CrossingAmountAccountBranchMappingId").val(@Model.CustomerFirmBranchTransportSetting.SalesAccountBranchMappingId).trigger('change');
            $("#CrossingCommissionAccountBranchMappingId").val(@Model.CustomerFirmBranchTransportSetting.SalesAccountBranchMappingId).trigger('change');
            $("#CrossingHamaliAccountBranchMappingId").val(@Model.CustomerFirmBranchTransportSetting.SalesAccountBranchMappingId).trigger('change');
            $("#CrossingDeliveryAccountBranchMappingId").val(@Model.CustomerFirmBranchTransportSetting.SalesAccountBranchMappingId).trigger('change');

            var lastOptionValue = $('#GoDownNumber option:last-child').val();
            var maxvalue = isNaN(parseInt(lastOptionValue)) ? 1 : parseInt(lastOptionValue) + 1;
            $("#GoDownNumber").append(new Option(maxvalue, maxvalue, true, true)).trigger('change');
        }

        function viewMode(id) {
            getDetail(id, true);
        }

        function editMode(id) {
            getDetail(id, false);
        }

        function refreshDatatableList() {
            $('#tblMain').DataTable().ajax.reload();
        }

        function bindDatatableList() {
            let columns = [];
            let colDef = [];
            colDef.push({
                "render": function (data, type, row) {
                    return row.billNumberBranch;
                },
                "targets": colDef.length,
            });
            colDef.push({
                "render": function (data, type, row) {
                    return row.billNumberFirm;
                },
                "targets": colDef.length,
            });
            colDef.push({
                "render": function (data, type, row) {
                    return moment(row.arrivalDate.split('T')[0]).format('DD/MM/YYYY');
                },
                "targets": colDef.length,
            });
            colDef.push({
                "render": function (data, type, row) {
                    return row.vehicleVRN;
                },
                "targets": colDef.length,
            });
            colDef.push({
                "render": function (data, type, row) {
                    return row.senderName;
                },
                "targets": colDef.length,
            });
            colDef.push({
                "render": function (data, type, row) {
                    return row.firmChalanNumber;
                },
                "targets": colDef.length,
            });
            colDef.push({
                "render": function (data, type, row) {
                    return row.firmChalanDate;
                },
                "targets": colDef.length,
            });
            colDef.push({
                "render": function (data, type, row) {
                    return row.taxableAmount.toFixed(2);
                },
                "className": "text-left",
                "targets": colDef.length,
            });
            colDef.push({
                "render": function (data, type, row) {
                    return row.cityFrom;
                },
                "targets": colDef.length,
            });
            colDef.push({
                "render": function (data, type, row) {
                    return row.cityTo;
                },
                "targets": colDef.length,
            });
            colDef.push({
                "render": function (data, type, row) {
                    return row.netAmount.toFixed(2);
                },
                "className": "text-left",
                "targets": colDef.length,
            });
            colDef.push({
                "render": function (data, type, row) {
                    return row.billPartyName;
                },
                "targets": colDef.length,
            });
            colDef.push({
                "render": function (data, type, row) {
                    return row.toPayLr;
                },
                "targets": colDef.length,
            });
            colDef.push({
                "render": function (data, type, row) {
                    return row.toPayLrSum.toFixed(2);
                },
                "className": "text-left",
                "targets": colDef.length,
            });
            colDef.push({
                "render": function (data, type, row) {
                    return row.paidLr;
                },
                "targets": colDef.length,
            });
            colDef.push({
                "render": function (data, type, row) {
                    return row.paidLrSum.toFixed(2);
                },
                "className": "text-left",
                "targets": colDef.length,
            });
            colDef.push({
                "render": function (data, type, row) {
                    return row.tbbLR;
                },
                "targets": colDef.length,
            });
            colDef.push({
                "render": function (data, type, row) {
                    return row.tbbLRSum.toFixed(2);
                },
                "className": "text-left",
                "targets": colDef.length,
            });
            colDef.push({
                "render": function (data, type, row) {
                    let btnAct = "<div class='btn-list'> ";
                    btnAct += "<a href='#' class='btn-edit btn btn-outline-warning small-icon-btn' data-value='" + row.id + "' data-toggle='tooltip' title='Edit' data-placement='bottom' data-original-title='Edit'><i class='fa fa-pencil'></i></a>&nbsp;&nbsp;";
                    btnAct += "<a href='#' class='btn-view btn btn-outline-info small-icon-btn' data-value='" + row.id + "' data-toggle='tooltip' title='View' data-placement='bottom' data-original-title='View'><i class='fa fa-info'></i></a>&nbsp;&nbsp;";
                    btnAct += "<a href='#' class='btn-delete-grid btn btn-outline-danger small-icon-btn' data-value='" + row.id + "' data-toggle='tooltip' title='Cancel' data-placement='bottom' data-original-title='Cancel'><i class='fa fa-trash-o'></i></a>";
                    btnAct += "</div>";
                    return btnAct;
                },
                "targets": colDef.length,
                "className": "text-center",
                "orderable": false
            });

            columns.push({ "data": "billNumberBranch", "name": "billNumberBranch" });
            columns.push({ "data": "billNumberFirm", "name": "billNumberFirm" });
            columns.push({ "data": "arrivalDate", "name": "arrivalDate" });
            columns.push({ "data": "vehicleVRN", "name": "vehicleVRN" });
            columns.push({ "data": "senderName", "name": "senderName" });
            columns.push({ "data": "firmChalanNumber", "name": "firmChalanNumber" });
            columns.push({ "data": "firmChalanDate", "name": "firmChalanDate" });
            columns.push({ "data": "taxableAmount", "name": "taxableAmount" });
            columns.push({ "data": "cityFrom", "name": "cityFrom" });
            columns.push({ "data": "cityTo", "name": "cityTo" });
            columns.push({ "data": "netAmount", "name": "netAmount" });
            columns.push({ "data": "billPartyName", "name": "billPartyName" });
            columns.push({ "data": "toPayLr", "name": "toPayLr" });
            columns.push({ "data": "toPayLrSum", "name": "toPayLrSum" });
            columns.push({ "data": "paidLr", "name": "paidLr" });
            columns.push({ "data": "paidLrSum", "name": "paidLrSum" });
            columns.push({ "data": "tbbLR", "name": "tbbLR" });
            columns.push({ "data": "tbbLRSum", "name": "tbbLRSum" });

            var table = $('#tblMain').DataTable({
                "bAutoWidth": false,
                lengthChange: false,
                ordering: true,
                searching: true,
                paging: true,
                pageLength: 50,
                order: [[0, 'asc']],
                pagingType: 'full_numbers',
                orderClasses: false,
                //scrollCollapse: true,
                //stateSave: false,
                columnDefs: colDef,
                columns: columns,
                language: {
                    paginate: {
                        next: '<i class="fa fa-angle-right"></i>', // or '→'
                        previous: '<i class="fa fa-angle-left"></i>', // or '←'
                        first: '<i class="fa fa-angle-double-left"></i>', // or '→'
                        last: '<i class="fa fa-angle-double-right"></i>' // or '←'
                    }
                },
                buttons: ['copy', 'excel', 'colvis'],
                processing: true,
                serverSide: true,
                ajax: {
                    url: '@(Url.Content("~/Customer/ChalanReceiveAgencyList"))',
                    type: 'GET',
                    data: function (d) { }
                },
                "initComplete": function (settings, json) {
                    gridInitComplete(table);
                },
                "drawCallback": function (settings) {
                    gridDrawCallback(this);
                }

            });
        }

        function fromReset(isClickAtPgLoad = false) {

            var formattedMinimumDate = $.datepicker.formatDate("dd/mm/yy", new Date());

            $("#Id").val(0);
            $("#BillNumberBranch").val(0);
            $("#BillNumberFirm").val(0);
            $("#FirmChalanNumber").val(0);

            $("#ArrivalDate").datepicker("setDate", formattedMinimumDate);
            $("#FirmChalanDate").datepicker("setDate", formattedMinimumDate);

            $("#CrossingAmount").val('');
            $("#CrossingCommission").val('');
            $("#CrossingHamali").val('');
            $("#CrossingDeliveryCharge").val('');
            $("#BrokerAmount").val('');
            $("#TaxableAmount").val('');
            $("#TDSPercent").val('');
            $("#TDSAmount").val('');
            $("#AdvanceCash").val('');
            $("#AdvanceNeft").val('');
            $("#ReceiveCash").val('');
            $("#OtherPlus").val('');
            $("#OtherLess").val('');
            $("#NetAmount").val('');
            $("#Notes").val('');
            $('#LRTbl').html('');
            addRow();
            if (isClickAtPgLoad === false)
                $("#VehicleId").val(null).trigger('change');

            $("#SenderBranchAccountMappingid").val(null).trigger('change');
            $("#BillAccountBranchMappingId").val(null).trigger('change');
            $("#ToAccountBranchMappingId").val(null).trigger('change');
            $("#SalesAccountBranchMappingId").val(null).trigger('change');
            $("#CrossingAmountAccountBranchMappingId").val(null).trigger('change');
            $("#CrossingCommissionAccountBranchMappingId").val(null).trigger('change');
            $("#CrossingHamaliAccountBranchMappingId").val(null).trigger('change');
            $("#CrossingDeliveryAccountBranchMappingId").val(null).trigger('change');
            $("#BrokerBranchMappingId").val(null).trigger('change');
            $("#GoDownNumber").val(null).trigger('change');

            $("#IsAutoLR").prop('checked', false);
            $("#activeTabName").text("Add");
            $(".btn-delete").hide();
        }

        function saveItem() {
            try {
                if ($("#SenderBranchAccountMappingid").val() == null || $("#SenderBranchAccountMappingid").val() == "") {
                    showWarning("", "Please select sender name");
                    $("#SenderBranchAccountMappingid").focus();
                    return false;
                }

                if ($("#CityIdFrom").val() == null || $("#CityIdFrom").val() == "") {
                    showWarning("", "Please select to from city");
                    $("#CityIdFrom").focus();
                    return false;
                }

                if ($("#CityIdTo").val() == null || $("#CityIdTo").val() == "") {
                    showWarning("", "Please select to city");
                    $("#CityIdTo").focus();
                    return false;
                }

                if ($("#VehicleId").val() == null || $("#VehicleId").val() == "") {
                    showWarning("", "Please select vehicle");
                    $("#VehicleId").focus();
                    return false;
                }


                if ($("#EwayBillNo").val() != null && $("#EwayBillNo").val() != "") {
                    if (ewayBillNumber.length < 12) {
                        showWarning("", "Eway Bill Number should be at least 12 characters long.");
                        $("#EwayBillNo").focus();
                        return false;
                    }
                }

                if ($("#GoDownNumber").val() == null || $("#GoDownNumber").val() == "") {
                    showWarning("", "Please select godown no");
                    $("#GoDownNumber").focus();
                    return false;
                }


                if ($("#ToPayAmount").val() != null && $("#ToPayAmount").val() != "") {
                    if (!/^[-+]?(\d{1,7}(\.\d{0,2})?|\.\d{1,2})$/.test($("#ToPayAmount").val())) {
                        var toPayLbl = $("#ToPayAccountBranchMappingLbl").text();
                        showWarning("", toPayLbl + " Amount must be up to 7 characters before the decimal point and 2 characters after the decimal point.");
                        $("#ToPayAmount").focus();
                        return false;
                    }
                }

                if ($("#CrossingAmount").val() != null && $("#CrossingAmount").val() != "") {
                    if (!/^[-+]?(\d{1,7}(\.\d{0,2})?|\.\d{1,2})$/.test($("#CrossingAmount").val())) {
                        showWarning("", "@Model.CustomerFirmBranchTransportSetting.CrossingAmountAccountName" + " Amount must be up to 7 characters before the decimal point and 2 characters after the decimal point.");
                        $("#CrossingAmount").focus();
                        return false;
                    }
                }

                if ($("#CrossingCommission").val() != null && $("#CrossingCommission").val() != "") {
                    if (!/^[-+]?(\d{1,7}(\.\d{0,2})?|\.\d{1,2})$/.test($("#CrossingCommission").val())) {
                        showWarning("", "@Model.CustomerFirmBranchTransportSetting.CrossingCommissionAccountName" + " Amount must be up to 7 characters before the decimal point and 2 characters after the decimal point.");
                        $("#CrossingCommission").focus();
                        return false;
                    }
                }

                if ($("#CrossingHamali").val() != null && $("#CrossingHamali").val() != "") {
                    if (!/^[-+]?(\d{1,7}(\.\d{0,2})?|\.\d{1,2})$/.test($("#CrossingHamali").val())) {
                        showWarning("", "@Model.CustomerFirmBranchTransportSetting.CrossingHamaliAccountName" + " Amount must be up to 7 characters before the decimal point and 2 characters after the decimal point.");
                        $("#CrossingHamali").focus();
                        return false;
                    }
                }

                if ($("#CrossingDeliveryCharge").val() != null && $("#CrossingDeliveryCharge").val() != "") {
                    if (!/^[-+]?(\d{1,7}(\.\d{0,2})?|\.\d{1,2})$/.test($("#CrossingDeliveryCharge").val())) {
                            showWarning("", "@Model.CustomerFirmBranchTransportSetting.CrossingDeliveryChargeAccountName" + " Amount must be up to 7 characters before the decimal point and 2 characters after the decimal point.");
                        $("#CrossingDeliveryCharge").focus();
                        return false;
                    }
                }

                if ($("#BrokerAmount").val() != null && $("#BrokerAmount").val() != "") {
                    if (!/^[-+]?(\d{1,7}(\.\d{0,2})?|\.\d{1,2})$/.test($("#BrokerAmount").val())) {
                        showWarning("", "Broker amount must be upto 7 characters before decimal point and 2 characters after decimal point long.");
                        $("#BrokerAmount").focus();
                        return false;
                    }
                }

                if ($("#TaxableAmount").val() != null && $("#TaxableAmount").val() != "") {
                    if (!/^[-+]?(\d{1,7}(\.\d{0,2})?|\.\d{1,2})$/.test($("#TaxableAmount").val())) {
                        showWarning("", "Lorry hire must be upto 7 characters before decimal point and 2 characters after decimal point long.");
                        $("#TaxableAmount").focus();
                        return false;
                    }
                }

                if ($("#TDSPercent").val() != null && $("#TDSPercent").val() != "") {
                    if (!/^[-+]?(\d{1,7}(\.\d{0,2})?|\.\d{1,2})$/.test($("#TDSPercent").val())) {
                        showWarning("", "Less tds must be up to 7 characters before the decimal point and 2 characters after the decimal point.");
                        $("#TDSPercent").focus();
                        return false;
                    }
                }

                if ($("#TDSAmount").val() != null && $("#TDSAmount").val() != "") {
                    if (!/^[-+]?(\d{1,7}(\.\d{0,2})?|\.\d{1,2})$/.test($("#TDSAmount").val())) {
                        showWarning("", "Less tds must be upto 7 characters before decimal point and 2 characters after decimal point long.");
                        $("#TDSAmount").focus();
                        return false;
                    }
                }

                if ($("#AdvanceCash").val() != null && $("#AdvanceCash").val() != "") {
                    if (!/^[-+]?(\d{1,7}(\.\d{0,2})?|\.\d{1,2})$/.test($("#AdvanceCash").val())) {
                        showWarning("", "Cash to lorry trip must be upto 7 characters before decimal point and 2 characters after decimal point long.");
                        $("#AdvanceCash").focus();
                        return false;
                    }
                }

                if ($("#AdvanceNeft").val() != null && $("#AdvanceNeft").val() != "") {
                    if (!/^[-+]?(\d{1,7}(\.\d{0,2})?|\.\d{1,2})$/.test($("#AdvanceNeft").val())) {
                        showWarning("", "Bank transfer to lorry trip must be upto 7 characters before decimal point and 2 characters after decimal point long.");
                        $("#AdvanceNeft").focus();
                        return false;
                    }
                }

                if ($("#ReceiveCash").val() != null && $("#ReceiveCash").val() != "") {
                    if (!/^[-+]?(\d{1,7}(\.\d{0,2})?|\.\d{1,2})$/.test($("#ReceiveCash").val())) {
                        showWarning("", "Received Cash By Driver must be upto 7 characters before decimal point and 2 characters after decimal point long.");
                        $("#ReceiveCash").focus();
                        return false;
                    }
                }

                if ($("#OtherPlus").val() != null && $("#OtherPlus").val() != "") {
                    if (!/^[-+]?(\d{1,7}(\.\d{0,2})?|\.\d{1,2})$/.test($("#OtherPlus").val())) {
                        showWarning("", "Other exp of trip must be upto 7 characters before decimal point and 2 characters after decimal point long.");
                        $("#OtherPlus").focus();
                        return false;
                    }
                }

                if ($("#OtherLess").val() != null && $("#OtherLess").val() != "") {
                    if (!/^[-+]?(\d{1,7}(\.\d{0,2})?|\.\d{1,2})$/.test($("#OtherLess").val())) {
                        showWarning("", "Other Less must be upto 7 characters before decimal point and 2 characters after decimal point long.");
                        $("#OtherLess").focus();
                        return false;
                    }
                }


                var savedata = new Object();
                savedata.Id = parseInt($("#Id").val());
                savedata.CityIdTo = getIntValueZero("CityIdTo");
                savedata.CityIdFrom = getIntValueZero("CityIdFrom");
                savedata.LRNumber = getIntValueZero("LRNumber");
                savedata.LRDate = moment(getDate($("#LRDate").val())).format('YYYY-MM-DDTHH:mm:ss.SSS[Z]');
                savedata.EwayBillNo = $("#EwayBillNo").val();
                savedata.AccountBranchMappingId = getIntValueZero("AccountBranchMappingId");
                savedata.DeliveryAccountBranchMappingId = getIntValueZero("DeliveryAccountBranchMappingId");
                savedata.LRPayTypeId = getIntValueZero("LRPayTypeId");
                savedata.BillAccountBranchMappingId = getIntValueNull("BillAccountBranchMappingId");
                savedata.Parcel = getIntValueNull("Parcel");
                savedata.Packing = $("#PackingId").val();
                savedata.Description = $("#DescriptionId").val();
                savedata.ActualWeight = getFloatValueNull("ActualWeight", 3);
                savedata.ChargeWeight = getFloatValueNull("ChargeWeight", 3);
                savedata.LRRateOnId = getIntValueZero("LRRateOnId");
                savedata.Rate = getFloatValueNull("Rate", 2);
                savedata.Freight = getFloatValueNull("Freight", 2);
                savedata.InvoiceNo = $("#InvoiceNo").val();
                savedata.VehicleId = getIntValueNull("VehicleId");
                savedata.InvoiceValue = getFloatValueNull("InvoiceValue", 2);
                savedata.LRDeliveryId = getIntValueZero("LRDeliveryId");
                savedata.PrivateMarka = $("#PrivateMarka").val();
                savedata.LRDeliveryTypeId = getIntValueZero("LRDeliveryTypeId");
                savedata.Remarks = $("#Remarks").val();
                savedata.Charges1 = getFloatValueNull("Charges1", 2);
                savedata.Charges2 = getFloatValueNull("Charges2", 2);
                savedata.Charges3 = getFloatValueNull("Charges3", 2);
                savedata.Charges4 = getFloatValueNull("Charges4", 2);
                savedata.Charges5 = getFloatValueNull("Charges5", 2);
                savedata.Charges6 = getFloatValueNull("Charges6", 2);
                savedata.GoDownNumber = getIntValueZero("GoDownNumber");

                var lrDetailsArray = [];
                lrDetailsArray = getRowData();
                savedata.LRDetailsArray = JSON.stringify(lrDetailsArray);

                blockUI('container');

                $.ajax({
                    type: "POST",
                    url: "@(Url.Action("SaveChalanReceiveAgency", "Customer"))",
                    data: JSON.stringify(savedata),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        unblockUI('container');
                        if (data.result == RESULT_SUCCESS) {
                            fromReset();
                            showWarning("", 'Chalan receive agency saved successfully.');
                            $("#Id").val(0);
                        } else {
                            showError("", data.data);
                        }
                    },
                    error: function (error) {
                        unblockUI('container');
                        showError("", error.statusText);
                    }
                });

            }
            catch (e) {
                unblockUI('container');
                showError("", e.message);
            }

        }

        function deleteItem(id) {
            if (id == 0) {
                id = $('#Id').val();
            }
            try {
                blockUI('container');
                var retrundata = AjaxCall("Get", "@(Url.Content("~/Customer/DeleteChalanReceiveAgency"))" + "/" + id, "",
                    function (result) {
                        unblockUI('container');
                        var str = "";
                        try {
                            if (result.result == RESULT_SUCCESS) {
                                refreshDatatableList();
                                fromReset();
                                $('.btn-back').click();
                            } else {
                                showError('Error', result.data); //warning,  success, error, info
                            }
                        } catch (e) {
                            showError('Error', e); //warning,  success, error, info
                        }
                    },
                    function (error) {
                        unblockUI('container');
                    });
            }
            catch (err) {
                unblockUI('container');
            }
        }

        function getDetail(id, isViewMode) {
            try {
                blockUI('container');
                var retrundata = AjaxCall("Get", "@(Url.Content("~/Customer/GetChalanReceiveAgency"))" + "/" + id, "",
                    function (result) {
                        unblockUI('container');
                        try {
                            if (result.result == RESULT_SUCCESS) {
                                addClick();
                                if (isViewMode) {
                                    setScreenMode(true);
                                    $("#activeTabName").text("VIEW ID# " + result.data.id);
                                } else {
                                    setScreenMode(false);
                                    $("#activeTabName").text("EDIT (ID# " + result.data.id + ")");
                                }

                                $("#Id").val(result.data.id);
                                $("#LRNumber").val(result.data.lrNumber);
                                $("#EwayBillNo").val(result.data.ewayBillNo).trigger('change');
                                $("#CityIdTo").val(result.data.cityIdTo).trigger('change');
                                $("#ToAccountBranchMappingId").val(result.data.toAccountBranchMappingId).trigger('change');
                                $("#DeliveryAccountBranchMappingId").val(result.data.deliveryAccountBranchMappingId).trigger('change');
                                $("#LRPayTypeId").val(result.data.lrPayTypeId).trigger('change');
                                $("#BillAccountBranchMappingId").val(result.data.billAccountBranchMappingId).trigger('change');
                                $("#PackingId").val(result.data.packing).trigger('change');
                                $("#DescriptionId").val(result.data.description).trigger('change');
                                $("#LRRateOnId").val(result.data.lrRateOnId).trigger('change');
                                $("#VehicleId").val(result.data.vehicleId).trigger('change');
                                $("#LRDeliveryId").val(result.data.lrDeliveryId).trigger('change');
                                $("#LRDeliveryTypeId").val(result.data.lrDeliveryTypeId).trigger('change');

                                $("#LRDate").val(moment(result.data.lrDate.split('T')[0], 'YYYY-MM-DD').add(1, 'days').format('DD/MM/YYYY'));
                                $("#Parcel").val(result.data.parcel);
                                $("#ActualWeight").val(result.data.actualWeight ? result.data.actualWeight.toFixed(3) : '');
                                $("#ChargeWeight").val(result.data.chargeWeight ? result.data.chargeWeight.toFixed(3) : '');
                                $("#Freight").val(result.data.freight ? result.data.freight.toFixed(2) : '');
                                $("#Rate").val(result.data.rate ? result.data.rate.toFixed(2) : '');
                                $("#Charges1").val(result.data.charges1 ? result.data.charges1.toFixed(2) : '');
                                $("#Charges2").val(result.data.charges2 ? result.data.charges2.toFixed(2) : '');
                                $("#Charges3").val(result.data.charges3 ? result.data.charges3.toFixed(2) : '');
                                $("#Charges4").val(result.data.charges4 ? result.data.charges4.toFixed(2) : '');
                                $("#Charges5").val(result.data.charges5 ? result.data.charges5.toFixed(2) : '');
                                $("#Charges6").val(result.data.charges6 ? result.data.charges6.toFixed(2) : '');
                                $("#InvoiceNo").val(result.data.invoiceNo);
                                $("#InvoiceValue").val(result.data.invoiceValue ? result.data.invoiceValue.toFixed(2) : '');
                                $("#PrivateMarka").val(result.data.privateMarka);
                                $("#Remarks").val(result.data.remarks);
                                $("#Ch").val(result.data.branchChalanNo);
                                $("#Truck").val(result.data.vehilcleNo);
                                $("#TruckLoadDate").val(result.data.chalanDate !== '' ? moment(result.data.chalanDate.split('T')[0]).format('DD/MM/YYYY') : '');
                                $("#GoDownNumber").val(result.data.goDownNumber).trigger('change');

                            } else {
                                showError('Error', result.data); //warning,  success, error, info
                            }
                        } catch (e) {
                            unblockUI('container');
                            showError('Error', e); //warning,  success, error, info
                        }
                    },
                    function (error) {

                    });
            }
            catch (err) {
            }
        }

        function GetTDSPercentByCustomerAccountBranchMappingId(CustomerAccountBranchMappingId) {
            try {
                if ($("#ToAccountBranchMappingId").val() == '' || $("#ToAccountBranchMappingId").val() == null) return;
                var retrundata = AjaxCall("Get", "@(Url.Content("~/Customer/GetTDSPercentByCustomerAccountBranchMappingId"))" + "/" + CustomerAccountBranchMappingId, "",
                    function (result) {
                        try {
                            if (result.result == RESULT_SUCCESS) {

                                $("#TDSPercent").val(result.data.tds);

                            } else {
                                showError('Error', result.data); //warning,  success, error, info
                            }
                        } catch (e) {
                            showError('Error', e); //warning,  success, error, info
                        }
                    },
                    function (error) {

                    });
            }
            catch (err) {
            }
        }

        function CalcNetAmount() {

            var TaxableAmount = +getFloatValueZero("TaxableAmount", 2);
            var TDSAmount = +getFloatValueZero("TDSAmount", 2);
            var AdvanceCash = +getFloatValueZero("AdvanceCash", 2);
            var AdvanceNeft = +getFloatValueZero("AdvanceNeft", 2);
            var ReceiveCash = +getFloatValueZero("ReceiveCash", 2);
            var OtherPlus = +getFloatValueZero("OtherPlus", 2);
            var OtherLess = +getFloatValueZero("OtherLess", 2);
            var NetAmount = +getFloatValueZero("NetAmount", 2);

            $("#NetAmount").val((isNaN(TaxableAmount - (TDSAmount + AdvanceCash + AdvanceNeft + OtherLess) + (ReceiveCash + OtherPlus)) ? 0 : (TaxableAmount - (TDSAmount + AdvanceCash + AdvanceNeft + OtherLess) + (ReceiveCash + OtherPlus)).toFixed(2)));
        }

        function addRow() {

            var htmlContentArray = [];

            var htmlContent = `<div class="row m-0 rounded content-rows" id="row-` + contentRowId + `" style="border-bottom: 1px solid rgba(107, 122, 144, 0.3)">
                                            <div class="m-0 p-2 col-md-12">
                                                <div class="row">
                                                    <div class="col-md-1 pl-2 pr-2 text-center">Sr #</div>
                                                    <div class="col-md-1 pl-2 pr-2 text-center">E-Way Bill(A)</div>
                                                    <div class="col-md-1 pl-2 pr-2 text-center">LR#</div>
                                                    <div class="col-md-2 pl-2 pr-2 text-center">LR Date</div>
                                                    <div class="col-md-1 pl-2 pr-2 text-center">Pvt.Mark</div>
                                                    <div class="col-md-1 pl-2 pr-2 text-center">From City</div>
                                                    <div class="col-md-1 pl-2 pr-2 text-center">To City</div>
                                                    <div class="col-md-2 pl-2 pr-2 text-center">Consignor</div>
                                                    <div class="col-md-2 pl-2 pr-2 text-center">Consignee</div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-1 pl-2 pr-2">
                                                        <div class="form-group text-center mb-1">
                                                            <input type="text" class="form-control content-row-srno text-center" id="SrNumber` + contentRowId + `" placeholder="" readonly>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-1 pl-2 pr-2">
                                                        <div class="form-group text-center mb-1">
                                                            <input type="text" class="form-control" id="EwayBillNo` + contentRowId + `" placeholder="" tabindex="12">
                                                        </div>
                                                    </div>
                                                    <div class="col-md-1 pl-2 pr-2">
                                                        <div class="form-group text-center mb-1">
                                                            <input type="text" class="form-control" id="LRNumber` + contentRowId + `" placeholder="" tabindex="13">
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 pl-2 pr-2 ">
                                                        <div class="form-group text-center mb-1">
                                                            <div class="input-group">
                                                                <div class="input-group-prepend">
                                                                    <div class="input-group-text">
                                                                        <i class="fa fa-calendar tx-16 lh-0 op-6"></i>
                                                                    </div>
                                                                </div>
                                                                <input class="form-control fc-datepicker" placeholder="MM/DD/YYYY" type="text" id="LRDate${contentRowId}" tabindex="14">
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-1 pl-2 pr-2 ">
                                                        <div class="form-group text-center mb-1">
                                                            <input type="text" class="form-control" id="PrivateMarka` + contentRowId + `" placeholder="" tabindex="15">
                                                        </div>
                                                    </div>
                                                    <div class="col-md-1 pl-2 pr-2 ">
                                                        <div class="form-group text-center mb-1">
                                                            <select class="form-control select2-show-search select2-show-search-contentrows" id="CityIdFrom${contentRowId}"  tabindex="16">
        @{
            if (Model.CityList != null)
            {
                foreach (var o in Model.CityList)
                {
                                                                                        <option value="@o.Value">@o.Text</option>
                }
            }
        }
                                                            </select>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-1 pl-2 pr-2 ">
                                                        <div class="form-group text-center mb-1">
                                                            <select class="form-control select2-show-search select2-show-search-contentrows" id="CityIdTo${contentRowId}" tabindex="17">
        @{
            if (Model.CityList != null)
            {
                foreach (var o in Model.CityList)
                {
                                                                                        <option value="@o.Value">@o.Text</option>
                }
            }
        }
                                                            </select>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 pl-2 pr-2">
                                                        <div class="form-group text-center mb-1">
                                                            <select class="form-control select2-show-search select2-show-search-contentrows" id="AccountBranchMappingId${contentRowId}" tabindex="18">
        @{
            if (Model.AccountBranchMappingList != null)
            {
                foreach (var o in Model.AccountBranchMappingList)
                {
                                                                                        <option value="@o.Value">@o.Text</option>
                }
            }
        }
                                                            </select>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 pl-2 pr-2">
                                                        <div class="form-group text-center mb-1">
                                                            <select class="form-control select2-show-search select2-show-search-contentrows" id="DeliveryAccountBranchMappingId${contentRowId}" tabindex="19">
        @{
            if (Model.AccountBranchMappingList != null)
            {
                foreach (var o in Model.AccountBranchMappingList)
                {
                                                                                        <option value="@o.Value">@o.Text</option>
                }
            }
        }
                                                            </select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row" style="justify-content: flex-end;">
                                                    <div class="col-md-1 pl-2 pr-2 text-center">Parcel</div>
                                                    <div class="col-md-1 pl-2 pr-2 text-center">Chg. Wgt</div>
                                                    <div class="col-md-1 pl-2 pr-2 text-center">Pay Type</div>
                                                    <div class="col-md-2 pl-2 pr-2 text-center">Bill Party</div>
                                                    <div class="col-md-1 pl-2 pr-2 text-center">Net Amount</div>
                                                    <div class="col-md-1 pl-2 pr-2 text-center">Action</div>
                                                </div>
                                                <div class="row" style="justify-content: flex-end;">
                                                    <div class="col-md-1 pl-2 pr-2">
                                                        <div class="form-group text-center mb-1">
                                                            <input type="text" class="form-control text-right" id="Parcel${contentRowId}" placeholder="" tabindex="20">
                                                        </div>
                                                    </div>
                                                    <div class="col-md-1 pl-2 pr-2">
                                                        <div class="form-group text-center mb-1">
                                                            <input type="text" class="form-control text-right decimalonly" data-tofixed="2" id="ChargeWeight${contentRowId}" placeholder="" tabindex="21">
                                                        </div>
                                                    </div>
                                                    <div class="col-md-1 pl-2 pr-2">
                                                        <div class="form-group text-center mb-1">
                                                            <select class="form-control select2-show-search select2-show-search-contentrows" id="LRPayTypeId${contentRowId}" tabindex="22">
        @{
            if (Model.PayTypeList != null)
            {
                foreach (var o in Model.PayTypeList)
                {
                    var optionValue = "@o.Value";
                    var isSelected = optionValue == "@Model.CustomerFirmBranchTransportSetting.LRPayTypeId.ToString()";

                    if (isSelected)
                    {
                                                                                                <option value="@o.Value" selected>@o.Text</option>
                    }
                    else
                    {
                                                                                                <option value="@o.Value">@o.Text</option>
                    }
                }
            }
        }
                                                            </select>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-2 pl-2 pr-2">
                                                        <div class="form-group text-center mb-1">
                                                            <select class="form-control select2-show-search select2-show-search-contentrows" id="BillAccountBranchMappingId${contentRowId}"  tabindex="23">
        @{
            if (Model.AccountBranchMappingList != null)
            {
                foreach (var o in Model.AccountBranchMappingList)
                {
                                                                                        <option value="@o.Value">@o.Text</option>
                }
            }
        }
                                                            </select>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-1 pl-2 pr-2 text-center">
                                                        <div class="form-group text-center mb-1">
                                                            <input type="text" class="form-control text-right decimalonly" data-tofixed="2" id="NetAmount` + contentRowId + `" placeholder=""  tabindex="24">
                                                        </div>
                                                    </div>
                                                    <div class="col-md-1 pl-2 pr-2 text-center">
                                                        <div class="form-group text-center mb-1">
                                                            <div class="btn-list1 mt-1">
                                                                <a href="javascript:addRow();" class="btn btn-outline-primary small-icon-btn content-rows-add-btn" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="Add" tabindex="25"><i class="fa fa-plus"></i></a>
                                                                <a href="javascript:deleteRow(` + contentRowId + `);" class="btn btn-outline-danger small-icon-btn" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="Delete"><i class="fa fa-trash-o"></i></a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>`;

            htmlContentArray.push(htmlContent);

            $('.content-rows-add-btn').remove();
            $('#LRTbl').append(htmlContentArray.join(''));
            $('.fc-datepicker').datepicker();
            $('.select2-show-search-contentrows').select2({
                minimumResultsForSearch: ''
            });

            var counter = 0;
            $('.content-row-srno').each(function () {
                $(this).val(++counter);
            });

            var roundOff = @((Model.CustomerFirmTransportSetting.IsWeightRoundOff ? "true" : "false").ToLower());
            var chargeWeightElement = $("#ChargeWeight" + contentRowId);

            if (roundOff) {
                chargeWeightElement.on("change", function (e) {
                    var chargeWeight = parseFloat(getFloatValueZero("ChargeWeight" + contentRowId, 3));

                    if (chargeWeight >= 1 && chargeWeight <= 49.999) {
                        var roundedWeight = Math.ceil(chargeWeight / 50) * 50;
                        chargeWeightElement.val(roundedWeight.toFixed(3));
                    }

                    if (chargeWeight >= 50.001) {
                        var roundedWeight = Math.ceil(chargeWeight / 5) * 5;
                        chargeWeightElement.val(roundedWeight.toFixed(3));
                    }

                    if (chargeWeight == 50 || chargeWeight == 0) {
                        chargeWeightElement.val(chargeWeight.toFixed(3));
                    }
                });

                chargeWeightElement.on("focus", function (e) {
                    if (chargeWeightElement.val() == '' || chargeWeightElement.val() == null) {
                        chargeWeightElement.val(50.000);
                    }
                });
            } else {
                chargeWeightElement.on("focusout", function (e) {
                    var chargeWeight = getFloatValueZero("ChargeWeight" + contentRowId, 3);
                    chargeWeightElement.val(chargeWeight.toFixed(3));
                });
            }

            $("#AccountBranchMappingId" + contentRowId).on('change', function (e) {
                BindBillParty(contentRowId);
            });

            $("#DeliveryAccountBranchMappingId" + contentRowId).on('change', function (e) {
                BindBillParty(contentRowId);
            });

            $("#LRPayTypeId" + contentRowId).on('change', function (e) {
                BindBillParty(contentRowId, true);
            });

            $("#NetAmount" + contentRowId).on('focusout', function (e) {
                BindTopayTBBPaidAmt();
            });

            $("#ChargeWeight" + contentRowId).val('');
            $("#PrivateMarka" + contentRowId).val('');
            $("#LRPayTypeId" + contentRowId).val(@Model.CustomerFirmBranchTransportSetting.LRPayTypeId.ToString()).trigger('change');
            $("#AccountBranchMappingId" + contentRowId).val(null).trigger('change');
            $("#DeliveryAccountBranchMappingId" + contentRowId).val(null).trigger('change');
            $("#BillAccountBranchMappingId" + contentRowId).val(null).trigger('change');
            $("#CityIdTo" + contentRowId).val(null).trigger('change');
            $("#CityIdFrom" + contentRowId).val(null).trigger('change');
        }

        function deleteRow(rowId) {
            $('#row-' + rowId).remove();
            if ($('.content-rows').length == 0 || $('.content-rows-add-btn').length == 0) {
                addRow();
            }
        }

        function getRowData() {
            var rowDataArray = [];

            $('.content-rows').each(function () {
                var rowData = {
                    'SrNumber': $(this).find('.content-row-srno').val(),
                    'EwayBillNo': $(this).find('#EwayBillNo' + contentRowId).val(),
                    'LRNumber': $(this).find('#LRNumber' + contentRowId).val(),
                    'LRDate': $(this).find('#LRDate' + contentRowId).val(),
                    'PrivateMarka': $(this).find('#PrivateMarka' + contentRowId).val(),
                    'CityIdFrom': $(this).find('#CityIdFrom' + contentRowId).val(),
                    'CityIdTo': $(this).find('#CityIdTo' + contentRowId).val(),
                    'AccountBranchMappingId': $(this).find('#AccountBranchMappingId' + contentRowId).val(),
                    'DeliveryAccountBranchMappingId': $(this).find('#DeliveryAccountBranchMappingId' + contentRowId).val(),
                    'Parcel': $(this).find('#Parcel' + contentRowId).val(),
                    'ChargeWeight': $(this).find('#ChargeWeight' + contentRowId).val(),
                    'LRPayTypeId': $(this).find('#LRPayTypeId' + contentRowId).val(),
                    'BillAccountBranchMappingId': $(this).find('#BillAccountBranchMappingId' + contentRowId).val(),
                    'NetAmount': $(this).find('#NetAmount' + contentRowId).val(),
                };
                rowDataArray.push(rowData);
            });

            return rowDataArray;
        }

        function getChalanAgencyDetailListByMasterId(masterId) {
            try {
                blockUI('container');
                var retrundata = AjaxCall("Get", "@(Url.Content("~/Customer/GetChalanAgencyDetailListByMasterId"))" + "/" + masterId, "",
                    function (result) {
                        unblockUI('container');
                        try {
                            if (result.result == RESULT_SUCCESS) {

                                $("#LRTbl").html("");

                                for (var i = 0; i < result.data.length; i++) {
                                    var rowData = result.data[i];
                                    addRow();

                                    $("#SrNumber" + i).val(rowData.SrNumber);
                                    $("#EwayBillNo" + i).val(rowData.EwayBillNo).trigger('change');
                                    $("#LRNumber" + i).val(rowData.LRNumber);
                                    $("#LRDate" + i).val(moment(rowData.LRDate.split('T')[0], 'YYYY-MM-DD').add(1, 'days').format('DD/MM/YYYY'));
                                    $("#PrivateMarka" + i).val(rowData.PrivateMarka);
                                    $("#CityIdFrom" + i).val(rowData.CityIdFrom).trigger('change');
                                    $("#CityIdTo" + i).val(rowData.CityIdTo).trigger('change');
                                    $("#AccountBranchMappingId" + i).val(rowData.AccountBranchMappingId).trigger('change');
                                    $("#DeliveryAccountBranchMappingId" + i).val(rowData.DeliveryAccountBranchMappingId).trigger('change');
                                    $("#LRPayTypeId" + i).val(rowData.LRPayTypeId).trigger('change');
                                    $("#Parcel" + i).val(rowData.Parcel);
                                    $("#ChargeWeight" + i).val(rowData.ChargeWeight ? rowData.ChargeWeight.toFixed(3) : '');
                                    $("#BillAccountBranchMappingId" + i).val(rowData.BillAccountBranchMappingId).trigger('change');
                                    $("#NetAmount" + i).val(rowData.NetAmount ? rowData.NetAmount.toFixed(3) : '');
                                }
                                addRow();
                            } else {
                                showError('Error', result.data); //warning,  success, error, info
                            }
                        } catch (e) {
                            unblockUI('container');
                            showError('Error', e); //warning,  success, error, info
                        }
                    },
                    function (error) {

                    });
            }
            catch (err) {
            }
        }

        function BindBillParty(contentRowId, isForceFullyChangeBillParty = false) {
            if ($("#BillAccountBranchMappingId" + contentRowId).val() == '' || $("#BillAccountBranchMappingId" + contentRowId).val() == null || isForceFullyChangeBillParty) {
                if ($("#LRPayTypeId" + contentRowId).val() != '' || $("#LRPayTypeId" + contentRowId).val() != null) {
                    var spanElement = document.getElementById("select2-LRPayTypeId" + contentRowId + "-container");
                    var selectedLRPayType = spanElement.getAttribute("title");
                    if (selectedLRPayType != '' || selectedLRPayType != null) {
                        if (selectedLRPayType == 'To Pay' || selectedLRPayType == 'FOC') {
                            if ($("#DeliveryAccountBranchMappingId" + contentRowId).val() != '' || $("#DeliveryAccountBranchMappingId" + contentRowId).val() != null) {
                                $("#BillAccountBranchMappingId" + contentRowId).val($("#DeliveryAccountBranchMappingId" + contentRowId).val()).trigger('change');
                            }
                        }
                        if (selectedLRPayType == 'Paid' || selectedLRPayType == 'TBB') {
                            if ($("#AccountBranchMappingId" + contentRowId).val() != '' || $("#AccountBranchMappingId" + contentRowId).val() != null) {
                                $("#BillAccountBranchMappingId" + contentRowId).val($("#AccountBranchMappingId" + contentRowId).val()).trigger('change');
                            }
                        }
                    }
                }
            }
        }

        function getBillParty() {
            try {
                if ($('#VehicleId').val() == '') return;

                blockUI('container');
                var retrundata = AjaxCall("GET", "@(Url.Content("~/Common/GetCustomerAccountBranchMappingByVehicle"))" + "/" + $('#VehicleId').val(), "",
                    function (data) {
                        unblockUI('container');
                        if (data.result == RESULT_SUCCESS) {
                            if (data.data != null && data.data != undefined) {
                                $('#BillAccountBranchMappingId').val(data.data.id).trigger('change');
                            }
                        } else {
                            showError("", data.data);
                        }
                    },
                    function (error) {
                        unblockUI('container');
                        showError("", error.statusText);
                    });
            }
            catch (err) {
                unblockUI('container');
                showError("", e.message);
            }
        }

        function BindTopayTBBPaidAmt() {
            var rowDataArray = getRowData();

            var amountByLRPayType = rowDataArray.reduce(function (acc, row) {
                var lrPayTypeId = row.LRPayTypeId;
                acc[lrPayTypeId] = (acc[lrPayTypeId] || 0) + parseFloat(row.NetAmount || 0);
                return acc;
            }, {});

            var topay = amountByLRPayType['1'] || 0.00;
            var paid = amountByLRPayType['2'] || 0.00;
            var tbb = amountByLRPayType['3'] || 0.00;

            var totalAmountSum = rowDataArray.reduce(function (acc, row) {
                return acc + parseFloat(row.NetAmount || 0.00);
            }, 0);

            $("#ToPayAmount").val(topay.toFixed(2));
            $("#Paid").val(paid.toFixed(2));
            $("#TBB").val(tbb.toFixed(2));
            $("#Total").val(topay.toFixed(2) + paid.toFixed(2) + tbb.toFixed(2));
            $("#TaxableAmount").val(totalAmountSum.toFixed(2));
        }

    </script>
}
