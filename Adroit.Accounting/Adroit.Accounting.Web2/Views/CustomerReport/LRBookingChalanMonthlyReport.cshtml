@using Adroit.Accounting.Model;
@using Adroit.Accounting.Model.Enums;
@model Adroit.Accounting.Model.ReportViewModel.LRBookingChalanMonthlyReportViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="dv-parameters side-app">
    <div class="row">
        <div class="col-md-12 col-lg-12">
            <div class="page-header">
                <ol class="breadcrumb breadcrumb-arrow">
                    <li><a href="#">Reports</a></li>
                    <li><a href="#">Book & Register</a></li>
                    <li><a href="#">LR Booking Register</a></li>
                    <li class="active"><span>Chalan Monthly Report</span></li>
                </ol>
                <div class="ml-auto">
                    <div class="input-group">
                        <a href="#" class="btn btn-secondary text-white mr-2 btn-sm" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="Bookmark this page">
                            <span>
                                <i class="fa fa-star"></i>
                            </span>
                        </a>
                        <a href="lockscreen.html" class="btn btn-primary text-white mr-2 btn-sm" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="lock">
                            <span>
                                <i class="fa fa-lock"></i>
                            </span>
                        </a>
                        <a href="#" class="btn btn-warning text-white btn-sm show-report" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="Show Report">
                            <span>
                                <i class="fa fa-spinner"></i>
                            </span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 col-xl-12 col-md-12 col-sm-12">
            <div class="card">
                <div class="card-header">
                    <!--<h3 class="card-title">Add/Edit Product</h3>-->
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label for="BranchIds">Branch</label>
                                <select class="group-filter mode-ed" id="BranchIds" multiple="multiple">
                                    @{
                                        if (Model.BranchList != null)
                                        {
                                            foreach (var y in Model.BranchList.GroupBy(o => o.Other).ToList())
                                            {
                                                <optgroup label="@y.First().Other">
                                                    @foreach (var o in y)
                                                    {
                                                        <option value="@o.Value">@o.Text</option>
                                                    }
                                                </optgroup>
                                            }
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer text-right">
                    <a href="#" class="btn btn-warning mt-1 show-report" data-toggle="tooltip" title="" data-placement="top" data-original-title="Print"><i class="fa fa-spinner"></i>&nbsp;Generate Report</a>
                    <a href="#" class="btn btn-gray mt-1 reset-button" data-toggle="tooltip" title="" data-placement="top" data-original-title="Cancel"><i class="fa fa-refresh"></i>&nbsp;Reset</a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="dv-report side-app">
    <div class="row">
        <div class="col-lg-12 col-xl-12 col-md-12 col-sm-12">
            <div class="page-header">
                <ol class="breadcrumb breadcrumb-arrow">
                    <li><a href="#">Reports</a></li>
                    <li><a href="#">Book & Register</a></li>
                    <li><a href="#">LR Booking Register</a></li>
                    <li class="active"><span>Chalan Monthly Report</span></li>
                </ol>
                <div class="ml-auto">
                    <div class="input-group">
                        <a href="#" target="_blank" class="btn btn-blue text-white mr-2 btn-sm btn-print" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="Print"><span><i class="fa fa-print"></i></span></a>
                        <a href="#" class="btn btn-success text-white mr-2 btn-sm" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="Send"><span><i class="fa fa-share-alt"></i></span></a>
                        <a href="#" class="btn-back btn btn-gray text-white btn-sm" data-toggle="tooltip" title="" data-placement="bottom" data-original-title="Cancel"><span><i class="fa fa-arrow-left"></i></span></a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 col-xl-12 col-md-12 col-sm-12">
            <div class="card">
                <div class="card-header">
                    <!--<h3 class="card-title">Add/Edit Product</h3>-->
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table id="tblMain" class="table table-bordered key-buttons">
                            <thead>
                                <tr>
                                    <th class="border-bottom-0 text-center">month</th>
                                    <th class="border-bottom-0 text-center">Total Chalan</th>
                                    <th class="border-bottom-0 text-right">Total Freight</th>
                                    <th class="border-bottom-0 text-right">IGST Amount</th>
                                    <th class="border-bottom-0 text-right">CGST Amount</th>
                                    <th class="border-bottom-0 text-right">SGST Amount</th>
                                    <th class="border-bottom-0 text-right">Others</th>
                                    <th class="border-bottom-0 text-right">Net Total</th>
                                </tr>
                            </thead>
                            <tbody>                                
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="card-footer text-right">
                    <a href="#" target="_blank" class="btn btn-blue mt-1 btn-print" data-toggle="tooltip" title="" data-placement="top" data-original-title="Print"><i class="fa fa-print"></i>&nbsp;Print</a>
                    <a href="#" class="btn btn-success mt-1" data-toggle="tooltip" title="" data-placement="top" data-original-title="Send"><i class="fa fa-share-alt"></i>&nbsp;Send</a>
                    <a href="#" class="btn btn-gray mt-1 btn-back" data-toggle="tooltip" title="" data-placement="top" data-original-title="Cancel"><i class="fa fa-arrow-left"></i>&nbsp;Back</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{

    <script>

        $(function (e) {

            $('.dv-report').hide();
            $('.dv-parameters').show();

            $(".reset-button").on("click", function () {
                $("#BranchIds").multipleSelect('setSelects', []);
            });

            $(".show-report").on("click", function () {
                BranchIds = $('#BranchIds').val().length === 0 ? '0' : $('#BranchIds').val().join(",");
                if (BranchIds == '0') {
                    showWarning("", "Please select branch");
                    return;
                }

                $('.dv-parameters').slideUp();
                $('.dv-report').slideDown();
                if ($.fn.dataTable.isDataTable('#tblMain')) {
                    $('#tblMain').DataTable().destroy();
                }
                bindDatatableList();
                var url = '@Url.Content("~/CustomerReport/LRBookingChalanMonthlyReportPrint")';
                $(".btn-print").attr("href", url);
            });

            $(".btn-back").on("click", function () {
                $('.dv-parameters').slideDown();
                $('.dv-report').slideUp();
                $('#tblMain tbody').html('');
            });
        }); 

        function getCurrentTableData() {
            var table = $('#tblMain').DataTable();
            var data = table.data().toArray();
            return data;
        }

        var BranchIds;

        function bindDatatableList() {
            let tableBody = $('#tblMain tbody');

            let columns = [];
            let colDef = [];
            colDef.push({
                "render": function (data, type, row) {
                    return row.billMonth + ' (@(ViewBag.Year))';
                },
                "targets": colDef.length,
                "class": "text-center",
            });
            colDef.push({
                "render": function (data, type, row) {
                    return row.totalLR;
                },
                "targets": colDef.length,
                "class": "text-center",
            });
            colDef.push({
                "render": function (data, type, row) {
                    return (row.freight || 0).toFixed(2);
                },
                "targets": colDef.length,
                "class": "text-right",
            });            
            colDef.push({
                "render": function (data, type, row) {
                    return (row.igstTotal || 0).toFixed(2);
                },
                "targets": colDef.length,
                "class": "text-right",
            });
            colDef.push({
                "render": function (data, type, row) {
                    return (row.cgstTotal || 0).toFixed(2);
                },
                "targets": colDef.length,
                "class": "text-right",
            });
            colDef.push({
                "render": function (data, type, row) {
                    return (row.sgstTotal || 0).toFixed(2);
                },
                "targets": colDef.length,
                "class": "text-right",
            });
            colDef.push({
                "render": function (data, type, row) {
                    return (row.otherPlus || 0).toFixed(2);
                },
                "targets": colDef.length,
                "class": "text-right",
            });
            colDef.push({
                "render": function (data, type, row) {
                    return (row.invoiceValue || 0).toFixed(2);
                },
                "targets": colDef.length,
                "class": "text-right",
            });

            columns.push({ "data": "billMonth", "name": "billMonth" });
            columns.push({ "data": "totalLR", "name": "totalLR" });
            columns.push({ "data": "freight", "name": "freight" });
            columns.push({ "data": "igstTotal", "name": "igstTotal" });
            columns.push({ "data": "cgstTotal", "name": "cgstTotal" });
            columns.push({ "data": "sgstTotal", "name": "sgstTotal" });
            columns.push({ "data": "otherPlus", "name": "otherPlus" });
            columns.push({ "data": "invoiceValue", "name": "invoiceValue" });

            var table = $('#tblMain').DataTable({
                "bAutoWidth": false,
                lengthChange: false,
                ordering: true,
                searching: true,
                paging: false,
                //pageLength: @(int.MaxValue),
                order: [[0, 'asc']],
                pagingType: 'full_numbers',
                orderClasses: false,
                destroy: true,
                //scrollCollapse: true,
                //stateSave: false,
                columnDefs: colDef,
                columns: columns,
                language: {
                    paginate: {
                        next: '<i class="fa fa-angle-right"></i>', // or '→'
                        previous: '<i class="fa fa-angle-left"></i>', // or '←'
                        first: '<i class="fa fa-angle-double-left"></i>', // or '→'
                        last: '<i class="fa fa-angle-double-right"></i>' // or '←'
                    }
                },
                buttons: ['copy', 'excel', 'colvis'],
                processing: true,
                serverSide: true,
                ajax: {
                    url: '@(Url.Content("~/CustomerReport/LRBookingChalanMonthlyReportList"))',
                    type: 'GET',
                    data: function (d) {
                        d.BranchIds = BranchIds;
                    }
                },
                "initComplete": function (settings, json) {
                    gridInitComplete(table);
                },
                "drawCallback": function (settings) {
                    gridDrawCallback(this);

                    let api = this.api();
                    let rows = api.rows({ page: 'current' }).nodes();
                    tableBody.empty();                    
                    let totalLR = 0;
                    let totalFraight = 0;
                    let totalIGSTAmt = 0;
                    let totalCGSTAmt = 0;
                    let totalSGSTAmt = 0;
                    let totalOthers = 0;
                    let totalNet = 0;

                    for (let i = 0; i < rows.length; i++) {                        
                        if (api.cell(i, 1).data() != null)
                            totalLR += parseFloat(api.cell(i, 1).data());
                        if (api.cell(i, 2).data() != null)
                            totalFraight += parseFloat(api.cell(i, 2).data());
                        if (api.cell(i, 3).data() != null)
                            totalIGSTAmt += parseFloat(api.cell(i, 3).data());
                        if (api.cell(i, 4).data() != null)
                            totalCGSTAmt += parseFloat(api.cell(i, 4).data());
                        if (api.cell(i, 5).data() != null)
                            totalSGSTAmt += parseFloat(api.cell(i, 5).data());
                        if (api.cell(i, 6).data() != null)
                            totalOthers += parseFloat(api.cell(i, 6).data());
                        if (api.cell(i, 7).data() != null)
                            totalNet += parseFloat(api.cell(i, 3).data());

                        tableBody.append(rows[i]);
                    }

                    let totalRow = '<tr class="total-row">' +
                        '<td>TOTAL</td>' +
                        '<td class="text-center"> ' + totalLR + '</td>' +
                        '<td class="text-right"> ' + totalFraight.toFixed(2) + '</td>' +
                        '<td class="text-right"> ' + totalIGSTAmt.toFixed(2) + '</td>' +
                        '<td class="text-right"> ' + totalCGSTAmt.toFixed(2) + '</td>' +
                        '<td class="text-right"> ' + totalSGSTAmt.toFixed(2) + '</td>' +
                        '<td class="text-right"> ' + totalOthers.toFixed(2) + '</td>' +
                        '<td class="text-right"> ' + totalNet.toFixed(2) + '</td>' +
                        '</tr>';

                    tableBody.append(totalRow);
                },
                "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                    if (aData.deleted) {
                        $(nRow).addClass('cancelled-row');
                    }
                }
            });
        }

    </script>

}
